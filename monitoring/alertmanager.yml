global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@gemini-ocr.com'
  smtp_auth_username: 'alerts@gemini-ocr.com'
  smtp_auth_password: 'smtp-password'
  slack_api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'

# Inhibit rules allow to mute a set of alerts given that another alert is firing
inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'instance']

# Route tree for alerts
route:
  group_by: ['alertname', 'service']
  group_wait: 10s
  group_interval: 30s
  repeat_interval: 12h
  receiver: 'default'
  routes:
    # Critical alerts go to oncall and slack immediately
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      group_interval: 5s
      repeat_interval: 15m
      routes:
        - match:
            service: gemini-ocr
          receiver: 'gemini-ocr-critical'
        - match:
            service: redis
          receiver: 'redis-critical'
        - match:
            service: database
          receiver: 'database-critical'
        - match:
            service: kubernetes
          receiver: 'k8s-critical'

    # Warning alerts go to slack with longer intervals
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      routes:
        - match:
            service: gemini-ocr
          receiver: 'gemini-ocr-warning'

    # Development environment alerts (less noisy)
    - match:
        environment: development
      receiver: 'dev-alerts'
      group_interval: 10m
      repeat_interval: 24h

    # Maintenance window silencing
    - match:
        alertname: MaintenanceMode
      receiver: 'null'

# Receiver configurations
receivers:
  - name: 'default'
    email_configs:
      - to: 'devops@gemini-ocr.com'
        subject: '{{ .GroupLabels.alertname }} - {{ .GroupLabels.service }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          
          Labels:
          {{ range .Labels.SortedPairs }}  {{ .Name }}: {{ .Value }}
          {{ end }}
          {{ end }}

  - name: 'critical-alerts'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/CRITICAL/WEBHOOK'
        channel: '#alerts-critical'
        username: 'AlertManager'
        color: 'danger'
        title: 'üö® CRITICAL ALERT - {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          *Instance:* {{ .Labels.instance }}
          *Severity:* {{ .Labels.severity }}
          {{ end }}
        actions:
          - type: button
            text: 'View Dashboard'
            url: 'https://grafana.gemini-ocr.com/d/app-overview'
          - type: button
            text: 'Runbook'
            url: 'https://runbooks.gemini-ocr.com/{{ .GroupLabels.alertname }}'

    email_configs:
      - to: 'oncall@gemini-ocr.com'
        subject: 'üö® CRITICAL: {{ .GroupLabels.alertname }} - {{ .GroupLabels.service }}'
        headers:
          X-Priority: '1'
        body: |
          CRITICAL ALERT FIRED
          
          Service: {{ .GroupLabels.service }}
          Alert: {{ .GroupLabels.alertname }}
          
          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          
          Instance: {{ .Labels.instance }}
          Started: {{ .StartsAt }}
          
          {{ end }}
          
          Dashboard: https://grafana.gemini-ocr.com/d/app-overview
          Runbook: https://runbooks.gemini-ocr.com/{{ .GroupLabels.alertname }}

    pagerduty_configs:
      - routing_key: 'YOUR_PAGERDUTY_INTEGRATION_KEY'
        description: '{{ .GroupLabels.alertname }} - {{ .GroupLabels.service }}'
        client: 'Gemini OCR AlertManager'
        client_url: 'https://prometheus.gemini-ocr.com'
        details:
          service: '{{ .GroupLabels.service }}'
          environment: '{{ .GroupLabels.environment }}'
          alert_count: '{{ len .Alerts }}'

  - name: 'gemini-ocr-critical'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/APP/WEBHOOK'
        channel: '#gemini-ocr-alerts'
        username: 'Gemini OCR Monitor'
        color: 'danger'
        title: 'üî• Gemini OCR Critical Alert'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          
          *Instance:* {{ .Labels.instance }}
          *Started:* {{ .StartsAt }}
          {{ end }}

  - name: 'redis-critical'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/REDIS/WEBHOOK'
        channel: '#infrastructure-alerts'
        color: 'danger'
        title: 'üí• Redis Critical Alert'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          {{ end }}

  - name: 'database-critical'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/DB/WEBHOOK'
        channel: '#database-alerts'
        color: 'danger'
        title: 'üóÉÔ∏è Database Critical Alert'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          {{ end }}

  - name: 'k8s-critical'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/K8S/WEBHOOK'
        channel: '#kubernetes-alerts'
        color: 'danger'
        title: '‚ò∏Ô∏è Kubernetes Critical Alert'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          {{ end }}

  - name: 'warning-alerts'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/WARNING/WEBHOOK'
        channel: '#alerts-warning'
        username: 'AlertManager'
        color: 'warning'
        title: '‚ö†Ô∏è Warning Alert - {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          *Instance:* {{ .Labels.instance }}
          {{ end }}

  - name: 'gemini-ocr-warning'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/APP_WARNING/WEBHOOK'
        channel: '#gemini-ocr-alerts'
        username: 'Gemini OCR Monitor'
        color: 'warning'
        title: '‚ö†Ô∏è Gemini OCR Warning'
        text: |
          {{ range .Alerts }}
          {{ .Annotations.summary }}
          {{ .Annotations.description }}
          {{ end }}

  - name: 'dev-alerts'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/DEV/WEBHOOK'
        channel: '#dev-alerts'
        color: 'good'
        title: 'üîß Dev Environment Alert'
        text: |
          {{ range .Alerts }}
          {{ .Annotations.summary }}
          {{ end }}

  - name: 'null'
    # Silence alerts during maintenance

# Templates for custom message formatting
templates:
  - '/etc/alertmanager/templates/*.tmpl'